import Data.Char(isLetter,toLower)
import Data.List(sort)

caps :: [(String,String)]
caps = [
  ("Abu Dhabi","United Arab Emirates"),
  ("Abuja","Nigeria"),
  ("Accra","Ghana"),
  ("Adamstown","Pitcairn Islands"),
  ("Addis Ababa","Ethiopia"),
  ("Algiers","Algeria"),
  ("Alofi","Niue"),
  ("Amman","Jordan"),
  ("Amsterdam","Netherlands"),
  ("Andorra la Vella","Andorra"),
  ("Ankara","Turkey"),
  ("Antananarivo","Madagascar"),
  ("Apia","Samoa"),
  ("Ashgabat","Turkmenistan"),
  ("Asmara","Eritrea"),
  ("Astana","Kazakhstan"),
  ("Asunción","Paraguay"),
  ("Athens","Greece"),
  ("Avarua","Cook Islands"),
  ("Baghdad","Iraq"),
  ("Baku","Azerbaijan"),
  ("Bamako","Mali"),
  ("Bandar Seri Begawan","Brunei"),
  ("Bangkok","Thailand"),
  ("Bangui","Central African Republic"),
  ("Banjul","Gambia"),
  ("Basseterre","Saint Kitts and Nevis"),
  ("Beijing","China"),
  ("Beirut","Lebanon"),
  ("Belgrade","Serbia"),
  ("Belmopan","Belize"),
  ("Berlin","Germany"),
  ("Bern","Switzerland"),
  ("Bishkek","Kyrgyzstan"),
  ("Bissau","Guinea-Bissau"),
  ("Bogotá","Colombia"),
  ("Brasília","Brazil"),
  ("Bratislava","Slovakia"),
  ("Brazzaville","Republic of the Congo"),
  ("Bridgetown","Barbados"),
  ("Brussels","Belgium"),
  ("Bucharest","Romania"),
  ("Budapest","Hungary"),
  ("Buenos Aires","Argentina"),
  ("Bujumbura","Burundi"),
  ("Cairo","Egypt"),
  ("Canberra","Australia"),
  ("Caracas","Venezuela"),
  ("Castries","Saint Lucia"),
  ("Cayenne","French Guiana"),
  ("Charlotte Amalie","United States Virgin Islands"),
  ("Chisinau","Moldova"),
  ("Cockburn Town","Turks and Caicos Islands"),
  ("Conakry","Guinea"),
  ("Copenhagen","Denmark"),
  ("Dakar","Senegal"),
  ("Damascus","Syria"),
  ("Dhaka","Bangladesh"),
  ("Dili","East Timor"),
  ("Djibouti","Djibouti"),
  ("Dodoma","Tanzania"),
  ("Doha","Qatar"),
  ("Douglas","Isle of Man"),
  ("Dublin","Ireland"),
  ("Dushanbe","Tajikistan"),
  ("Edinburgh of the Seven Seas","Tristan da Cunha"),
  ("El Aaiún","Sahrawi Arab Democratic Republic"),
  ("Episkopi Cantonment","Akrotiri and Dhekelia"),
  ("Flying Fish Cove","Christmas Island"),
  ("Freetown","Sierra Leone"),
  ("Funafuti","Tuvalu"),
  ("Gaborone","Botswana"),
  ("George Town","Cayman Islands"),
  ("Georgetown","Ascension Island"),
  ("Georgetown","Guyana"),
  ("Gibraltar","Gibraltar"),
  ("Guatemala City","Guatemala"),
  ("Gustavia","Saint Barthélemy"),
  ("Hagåtña","Guam"),
  ("Hamilton","Bermuda"),
  ("Hanga Roa","Easter Island"),
  ("Hanoi","Vietnam"),
  ("Harare","Zimbabwe"),
  ("Hargeisa","Somaliland"),
  ("Havana","Cuba"),
  ("Helsinki","Finland"),
  ("Honiara","Solomon Islands"),
  ("Islamabad","Pakistan"),
  ("Jakarta","Indonesia"),
  ("Jamestown","Saint Helena"),
  ("Jerusalem","Israel"),
  ("Juba","South Sudan"),
  ("Kabul","Afghanistan"),
  ("Kampala","Uganda"),
  ("Kathmandu","Nepal"),
  ("Khartoum","Sudan"),
  ("Kiev","Ukraine"),
  ("Kigali","Rwanda"),
  ("King Edward Point","South Georgia and the South Sandwich Islands"),
  ("Kingston","Jamaica"),
  ("Kingstown","Saint Vincent and the Grenadines"),
  ("Kinshasa","Democratic Republic of the Congo"),
  ("Kuala Lumpur","Malaysia"),
  ("Kuwait City","Kuwait"),
  ("Libreville","Gabon"),
  ("Lilongwe","Malawi"),
  ("Lima","Peru"),
  ("Lisbon","Portugal"),
  ("Ljubljana","Slovenia"),
  ("Lomé","Togo"),
  ("London","United Kingdom"),
  ("Luanda","Angola"),
  ("Lusaka","Zambia"),
  ("Luxembourg","Luxembourg"),
  ("Madrid","Spain"),
  ("Majuro","Marshall Islands"),
  ("Malabo","Equatorial Guinea"),
  ("Malé","Maldives"),
  ("Managua","Nicaragua"),
  ("Manama","Bahrain"),
  ("Manila","Philippines"),
  ("Maputo","Mozambique"),
  ("Marigot","Saint Martin"),
  ("Maseru","Lesotho"),
  ("Mata-Utu","Wallis and Futuna"),
  ("Lobamba","Swaziland"),
  ("Mexico City","Mexico"),
  ("Minsk","Belarus"),
  ("Mogadishu","Somalia"),
  ("Monaco","Monaco"),
  ("Monrovia","Liberia"),
  ("Montevideo","Uruguay"),
  ("Moroni","Comoros"),
  ("Moscow","Russia"),
  ("Muscat","Oman"),
  ("Nairobi","Kenya"),
  ("Nassau","Bahamas"),
  ("Naypyidaw","Burma"),
  ("N'Djamena","Chad"),
  ("New Delhi","India"),
  ("Ngerulmud","Palau"),
  ("Niamey","Niger"),
  ("Nicosia","Cyprus"),
  ("Nouakchott","Mauritania"),
  ("Nouméa","New Caledonia"),
  ("Nukuʻalofa","Tonga"),
  ("Nuuk","Greenland"),
  ("Oranjestad","Aruba"),
  ("Oslo","Norway"),
  ("Ottawa","Canada"),
  ("Ouagadougou","Burkina Faso"),
  ("Pago Pago","American Samoa"),
  ("Palikir","Federated States of Micronesia"),
  ("Panama City","Panama"),
  ("Papeete","French Polynesia"),
  ("Paramaribo","Suriname"),
  ("Paris","France"),
  ("Philipsburg","Sint Maarten"),
  ("Phnom Penh","Cambodia"),
  ("Plymouth","Montserrat"),
  ("Podgorica","Montenegro"),
  ("Port Louis","Mauritius"),
  ("Port Moresby","Papua New Guinea"),
  ("Port Vila","Vanuatu"),
  ("Port-au-Prince","Haiti"),
  ("Port of Spain","Trinidad and Tobago"),
  ("Porto-Novo","Benin"),
  ("Prague","Czech Republic"),
  ("Praia","Cape Verde"),
  ("Pretoria","South Africa"),
  ("Pristina","Kosovo"),
  ("Pyongyang","North Korea"),
  ("Quito","Ecuador"),
  ("Rabat","Morocco"),
  ("Reykjavík","Iceland"),
  ("Riga","Latvia"),
  ("Riyadh","Saudi Arabia"),
  ("Road Town","British Virgin Islands"),
  ("Rome","Italy"),
  ("Roseau","Dominica"),
  ("Saipan","Northern Mariana Islands"),
  ("San José","Costa Rica"),
  ("San Juan","Puerto Rico"),
  ("San Marino","San Marino"),
  ("San Salvador","El Salvador"),
  ("Sana'a","Yemen"),
  ("Santiago","Chile"),
  ("Santo Domingo","Dominican Republic"),
  ("São Tomé","São Tomé and Príncipe"),
  ("Sarajevo","Bosnia and Herzegovina"),
  ("Seoul","South Korea"),
  ("Singapore","Singapore"),
  ("Skopje","Macedonia"),
  ("Sofia","Bulgaria"),
  ("Sri Jayawardenepura Kotte","Sri Lanka"),
  ("St. George's","Grenada"),
  ("St. Helier","Jersey"),
  ("St. John's","Antigua and Barbuda"),
  ("St. Peter Port Guernsey","British Crown Dependency"),
  ("St. Pierre","Saint Pierre and Miquelon"),
  ("Stanley","Falkland Islands"),
  ("Stepanakert","Nagorno-Karabakh Republic"),
  ("Stockholm","Sweden"),
  ("La Paz","Bolivia"),
  ("Sukhumi","Abkhazia"),
  ("Suva","Fiji"),
  ("Taipei","Taiwan"),
  ("Tallinn","Estonia"),
  ("Tarawa Atoll","Kiribati"),
  ("Tashkent","Uzbekistan"),
  ("Tbilisi","Georgia"),
  ("Tegucigalpa","Honduras"),
  ("Tehran","Iran"),
  ("Thimphu","Bhutan"),
  ("Tirana","Albania"),
  ("Tiraspol","Transnistria"),
  ("Tokyo","Japan"),
  ("Tórshavn","Faroe Islands"),
  ("Tripoli","Libya"),
  ("Tskhinvali","South Ossetia"),
  ("Tunis","Tunisia"),
  ("Ulan Bator","Mongolia"),
  ("Vaduz","Liechtenstein"),
  ("Valletta","Malta"),
  ("The Valley","Anguilla"),
  ("Vatican City","Vatican City"),
  ("Victoria","Seychelles"),
  ("Vienna","Austria"),
  ("Vientiane","Laos"),
  ("Vilnius","Lithuania"),
  ("Warsaw","Poland"),
  ("Washington, D.C.","United States"),
  ("Wellington","New Zealand"),
  ("West Island","Cocos (Keeling) Islands"),
  ("Willemstad","Curaçao"),
  ("Windhoek","Namibia"),
  ("Abidjan","Ivory Coast"),
  ("Yaoundé","Cameroon"),
  ("Yaren","Nauru"),
  ("Yerevan","Armenia"),
  ("Zagreb","Croatia")
  ]

matches :: String -> String -> Bool
matches s1 s2 = m (canonical s1) (canonical s2) False False
  where
    canonical = sort . map toLower . filter isLetter
    m [] [] True True = True
    m [] [] _ _ = False
    m [] [_] True False = True
    m [_] [] False True = True
    m [] _ _ _ = False
    m _ [] _ _ = False
    m s1@(h1:t1) s2@(h2:t2) f1 f2
      | h1 == h2 = m t1 t2 f1 f2
      | f1 && f2 = False
      | f1 = m s1 t2 True True
      | f2 = m t1 s2 True True
      | otherwise = m s1 t2 False True || m t1 s2 True False

main :: IO ()
main = sequence_ [putStrLn (cap ++ " " ++ country) | cap <- map fst caps, country <- map snd caps, matches cap country]

-- Paris Spain Syria
-- Rabat Qatar Aruba
-- Riga Iraq Iran
